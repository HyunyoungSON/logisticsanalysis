import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.font_manager as fm
import platform

# '전기일' 열을 datetime 형식으로 변환
yangsan_data['전기일'] = pd.to_datetime(yangsan_data['전기일'])

# 숫자형으로 변환
yangsan_data['CBM'] = pd.to_numeric(yangsan_data['CBM'], errors='coerce')
yangsan_data['중량'] = pd.to_numeric(yangsan_data['중량'], errors='coerce')
yangsan_data['절대값'] = pd.to_numeric(yangsan_data['절대값'], errors='coerce')

# 전기일별 차량번호별로 합계를 계산
aggregated_data = yangsan_data.groupby(['전기일', '차량번호']).agg({
    '차량타입': 'first',
    'CBM': 'sum',
    '중량': 'sum',
    '절대값': 'sum'
}).reset_index()

# 차량타입별로 일자별 평균을 계산
yangsan_pivot_table = aggregated_data.pivot_table(
    values=['CBM', '중량', '절대값'],
    index=['전기일'],
    aggfunc='sum'
).reset_index()

# 소수점 첫 번째 자리까지만 표시하도록 포맷팅
yangsan_pivot_table['CBM'] = yangsan_pivot_table['CBM'].round(1)
yangsan_pivot_table['중량'] = yangsan_pivot_table['중량'].round(1)
yangsan_pivot_table['절대값'] = yangsan_pivot_table['절대값'].round(1)

# 요일 컬럼 추가
yangsan_pivot_table['요일'] = yangsan_pivot_table['전기일'].dt.day_name(locale='ko_KR')

# 한글 폰트 설정 (Mac, Windows 및 Linux 각각에 맞는 설정)
if platform.system() == 'Darwin':  # MacOS
    plt.rc('font', family='AppleGothic')
elif platform.system() == 'Windows':  # Windows
    font_path = 'C:/Windows/Fonts/malgun.ttf'
    fontprop = fm.FontProperties(fname=font_path)
    plt.rc('font', family=fontprop.get_name())
else:  # Linux (예: 구글 콜랩)
    !apt-get -qq install -y fonts-nanum
    fm._rebuild()
    plt.rc('font', family='NanumBarunGothic')

# 일자별로 CBM, 중량, 절대값의 트렌드 그리기
plt.figure(figsize=(14, 7))

# CBM 트렌드
plt.subplot(3, 1, 1)
plt.plot(yangsan_pivot_table['전기일'], yangsan_pivot_table['CBM'])
plt.title('일자별 CBM 트렌드')
plt.xlabel('날짜')
plt.ylabel('CBM')

# 중량 트렌드
plt.subplot(3, 1, 2)
plt.plot(yangsan_pivot_table['전기일'], yangsan_pivot_table['중량'])
plt.title('일자별 중량 트렌드')
plt.xlabel('날짜')
plt.ylabel('중량')

# 절대값 트렌드
plt.subplot(3, 1, 3)
plt.plot(yangsan_pivot_table['전기일'], yangsan_pivot_table['절대값'])
plt.title('일자별 절대값 트렌드')
plt.xlabel('날짜')
plt.ylabel('절대값')

plt.tight_layout()
plt.show()

# 요일별 boxplot 차트
plt.figure(figsize=(14, 10))


yangsan_pivot_table.boxplot(column='CBM', by='요일')
plt.title('요일별 CBM 분포')
plt.suptitle('')
plt.xlabel('요일')
plt.ylabel('CBM')


yangsan_pivot_table.boxplot(column='중량', by='요일')
plt.title('요일별 중량 분포')
plt.suptitle('')
plt.xlabel('요일')
plt.ylabel('중량')


yangsan_pivot_table.boxplot(column='절대값', by='요일')
plt.title('요일별 절대값 분포')
plt.suptitle('')
plt.xlabel('요일')
plt.ylabel('절대값')

plt.tight_layout()
plt.show()

# 결과 출력
print(yangsan_pivot_table)
